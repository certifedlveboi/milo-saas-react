\
# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defines the data structures (schema) for your application.
# See https://firebase.google.com/docs/data-connect/reference/graphql/schema-language

# User type - often useful, even if primarily managed by Auth
type User @authorization(public: true) {
  # It's generally recommended to use the Firebase Auth UID as the ID.
  # We won't store password hashes or sensitive auth info here.
  id: String! @(db.map: "_id") # Map to Firestore's document ID
  displayName: String
  email: String
  createdAt: Timestamp
}

type Note @authorization(filter: "userId == auth.token.sub") {
  id: String! @(db.map: "_id") # Map to Firestore's document ID
  userId: String! # ID of the user who owns this note
  text: String!
  completed: Boolean! @(db.default: false) # Default to not completed
  priority: String @(db.default: "'normal'") # Example default
  createdAt: Timestamp @(db.onWrite: now) # Set automatically on creation/update
  # date field from DayContent.jsx seems more like a tag/filter?
  # Let's keep it simple for now, can add later if needed.
}

type Reminder @authorization(filter: "userId == auth.token.sub") {
  id: String! @(db.map: "_id") # Map to Firestore's document ID
  userId: String! # ID of the user who owns this reminder
  text: String!
  completed: Boolean! @(db.default: false) # Default to not completed
  dueDate: Timestamp # Optional due date
  createdAt: Timestamp @(db.onWrite: now) # Set automatically on creation/update
}

# You can add more types here as needed, e.g., for Budget, Habits, etc.
